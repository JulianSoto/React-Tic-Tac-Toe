// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Game component expect to match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Game />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <SideTable
          className="side-table"
          gameMode={null}
          gameModeSelectionHandler={[Function]}
          isDraw={false}
          players={null}
          resetGameState={[Function]}
          scoreboard={
            Array [
              0,
              0,
            ]
          }
          turn={0}
          winner={null}
        />,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "side-table",
          "gameMode": null,
          "gameModeSelectionHandler": [Function],
          "isDraw": false,
          "players": null,
          "resetGameState": [Function],
          "scoreboard": Array [
            0,
            0,
          ],
          "turn": 0,
          "winner": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <SideTable
            className="side-table"
            gameMode={null}
            gameModeSelectionHandler={[Function]}
            isDraw={false}
            players={null}
            resetGameState={[Function]}
            scoreboard={
              Array [
                0,
                0,
              ]
            }
            turn={0}
            winner={null}
          />,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "side-table",
            "gameMode": null,
            "gameModeSelectionHandler": [Function],
            "isDraw": false,
            "players": null,
            "resetGameState": [Function],
            "scoreboard": Array [
              0,
              0,
            ],
            "turn": 0,
            "winner": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
